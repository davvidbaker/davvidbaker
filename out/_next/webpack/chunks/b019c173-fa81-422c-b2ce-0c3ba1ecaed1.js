
          window.__NEXT_REGISTER_CHUNK('b019c173-fa81-422c-b2ce-0c3ba1ecaed1.js', function() {
            webpackJsonp([20],{

/***/ 114:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _Post = __webpack_require__(103);

var _Post2 = _interopRequireDefault(_Post);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  return _react2.default.createElement(_Post2.default, { attributes: { "readTime": 0.8545454545454545, "title": "The Post Title Goes Here", "slug": "title-goes-here", "date": "March 12, 2017" }, content: { "type": "root", "children": [{ "type": "paragraph", "children": [{ "type": "text", "value": "Gosh darn I need to sit down and actually figure out how it is I want to organize posts. I need to set up dynamic routing. It would probably be nice to have things set up so I can just run ", "position": { "start": { "line": 2, "column": 1, "offset": 2 }, "end": { "line": 2, "column": 190, "offset": 191 }, "indent": [] } }, { "type": "inlineCode", "value": "npm run generate post {posttitle}", "position": { "start": { "line": 2, "column": 190, "offset": 191 }, "end": { "line": 2, "column": 225, "offset": 226 }, "indent": [] } }, { "type": "text", "value": " and boom new post with everything set up. Eventually a gui might be nice.", "position": { "start": { "line": 2, "column": 225, "offset": 226 }, "end": { "line": 2, "column": 299, "offset": 300 }, "indent": [] } }], "position": { "start": { "line": 2, "column": 1, "offset": 2 }, "end": { "line": 2, "column": 299, "offset": 300 }, "indent": [] } }, { "type": "paragraph", "children": [{ "type": "text", "value": "I really need to decide whether ", "position": { "start": { "line": 4, "column": 1, "offset": 304 }, "end": { "line": 4, "column": 33, "offset": 336 }, "indent": [] } }, { "type": "strong", "children": [{ "type": "text", "value": "vim", "position": { "start": { "line": 4, "column": 35, "offset": 338 }, "end": { "line": 4, "column": 38, "offset": 341 }, "indent": [] } }], "position": { "start": { "line": 4, "column": 33, "offset": 336 }, "end": { "line": 4, "column": 40, "offset": 343 }, "indent": [] } }, { "type": "text", "value": " is doing me good. I do like that it has made me more comfortable editing files in the terminal, which is useful when working on remote machines. The downside has been not necessarily with regards to ", "position": { "start": { "line": 4, "column": 40, "offset": 343 }, "end": { "line": 4, "column": 240, "offset": 543 }, "indent": [] } }, { "type": "strong", "children": [{ "type": "text", "value": "vim", "position": { "start": { "line": 4, "column": 242, "offset": 545 }, "end": { "line": 4, "column": 245, "offset": 548 }, "indent": [] } }], "position": { "start": { "line": 4, "column": 240, "offset": 543 }, "end": { "line": 4, "column": 247, "offset": 550 }, "indent": [] } }, { "type": "text", "value": ", but rather the vim extension for ", "position": { "start": { "line": 4, "column": 247, "offset": 550 }, "end": { "line": 4, "column": 282, "offset": 585 }, "indent": [] } }, { "type": "strong", "children": [{ "type": "text", "value": "VS Code", "position": { "start": { "line": 4, "column": 284, "offset": 587 }, "end": { "line": 4, "column": 291, "offset": 594 }, "indent": [] } }], "position": { "start": { "line": 4, "column": 282, "offset": 585 }, "end": { "line": 4, "column": 293, "offset": 596 }, "indent": [] } }, { "type": "text", "value": ". There are certain functionalities that it takes away from me. For instance, CTRL+D ought to highlight the next instance of the currently highlighted word, instead it looks like it decrements the indentation. Maybe that is actually a vim command? It is quite possible I just mostly need to learn more vim commands. The problem is that vim commands are not implemented perfectly in the extension either. Like global find replace with confirmation. ", "position": { "start": { "line": 4, "column": 293, "offset": 596 }, "end": { "line": 4, "column": 741, "offset": 1044 }, "indent": [] } }, { "type": "inlineCode", "value": ":%s/foo/bar/gc", "position": { "start": { "line": 4, "column": 741, "offset": 1044 }, "end": { "line": 4, "column": 757, "offset": 1060 }, "indent": [] } }, { "type": "text", "value": " By the way, this is regarding the extension ", "position": { "start": { "line": 4, "column": 757, "offset": 1060 }, "end": { "line": 4, "column": 802, "offset": 1105 }, "indent": [] } }, { "type": "link", "title": null, "url": "https://github.com/VSCodeVim/Vim", "children": [{ "type": "text", "value": "Vim v0.6.2", "position": { "start": { "line": 4, "column": 803, "offset": 1106 }, "end": { "line": 4, "column": 813, "offset": 1116 }, "indent": [] } }], "position": { "start": { "line": 4, "column": 802, "offset": 1105 }, "end": { "line": 4, "column": 848, "offset": 1151 }, "indent": [] } }, { "type": "text", "value": ". ", "position": { "start": { "line": 4, "column": 848, "offset": 1151 }, "end": { "line": 4, "column": 850, "offset": 1153 }, "indent": [] } }, { "type": "normative", "id": "normative-Bybn29P4-", "children": [{ "type": "text", "value": "I should " }, { "type": "text", "value": "look at the codebase and see if it might be worthwhile to try to make some PRs.", "position": { "start": { "line": 4, "column": 850, "offset": 1153 }, "end": { "line": 4, "column": 929, "offset": 1232 }, "indent": [] } }], "position": { "start": { "line": 4, "column": 850, "offset": 1153 }, "end": { "line": 4, "column": 938, "offset": 1241 }, "indent": [] } }, { "type": "text", "value": " ", "position": { "start": { "line": 4, "column": 938, "offset": 1241 }, "end": { "line": 4, "column": 939, "offset": 1242 }, "indent": [] } }, { "type": "normative", "id": "normative-H1eb3hcDEb", "children": [{ "type": "text", "value": "I should " }, { "type": "text", "value": "do this.", "position": { "start": { "line": 4, "column": 939, "offset": 1242 }, "end": { "line": 4, "column": 947, "offset": 1250 }, "indent": [] } }], "position": { "start": { "line": 4, "column": 939, "offset": 1242 }, "end": { "line": 4, "column": 956, "offset": 1259 }, "indent": [] } }, { "type": "text", "value": " ", "position": { "start": { "line": 4, "column": 956, "offset": 1259 }, "end": { "line": 4, "column": 957, "offset": 1260 }, "indent": [] } }, { "type": "normative", "id": "normative-BkZZ33qwNZ", "children": [{ "type": "text", "value": "I should " }, { "type": "text", "value": "should should .", "position": { "start": { "line": 4, "column": 957, "offset": 1260 }, "end": { "line": 4, "column": 972, "offset": 1275 }, "indent": [] } }], "position": { "start": { "line": 4, "column": 957, "offset": 1260 }, "end": { "line": 4, "column": 981, "offset": 1284 }, "indent": [] } }, { "type": "text", "value": " ", "position": { "start": { "line": 4, "column": 981, "offset": 1284 }, "end": { "line": 4, "column": 982, "offset": 1285 }, "indent": [] } }, { "type": "normative", "id": "normative-HyGW3nqD4W", "children": [{ "type": "text", "value": "I should " }, { "type": "text", "value": "do that.", "position": { "start": { "line": 4, "column": 982, "offset": 1285 }, "end": { "line": 4, "column": 990, "offset": 1293 }, "indent": [] } }], "position": { "start": { "line": 4, "column": 982, "offset": 1285 }, "end": { "line": 4, "column": 999, "offset": 1302 }, "indent": [] } }], "position": { "start": { "line": 4, "column": 1, "offset": 304 }, "end": { "line": 4, "column": 999, "offset": 1302 }, "indent": [] } }], "position": { "start": { "line": 1, "column": 1, "offset": 0 }, "end": { "line": 4, "column": 999, "offset": 1302 } } } });
};

/**
 * This file was automatically created Mon Jul 03 2017 06:30:00 GMT-0400 (Eastern Daylight Time)
 */

/***/ })

});
          })
        